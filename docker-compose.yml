version: "3.8"

services:
  web:
    build:
      context: ./frontend
    image: dockerprocode.azurecr.io/docker-deploy_web_1
    # command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - api

  api:
    build:
      context: ./backend
    # command: python manage.py runserver 0.0.0.0:8000
    image: dockerprocode.azurecr.io/docker-deploy_api_1
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DB_URL: mysql://db/procode
      # DEBUG: 1
      # SECRET_KEY: ANYTHINGYOUWANTBUTSTRONG!
      # DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]

  # db:
  #   image: 'postgres:latest'
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USER: username
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: procode

  db:
    # image: dockerprocode.azurecr.io/mysql:8.0
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'procode'
      # So you don't have to use root, but you can if you like
      # MYSQL_USER: 'root'
      # You can use whatever password you like
      MYSQL_PASSWORD: ''
      # Password for root access
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      # MYSQL_RANDOM_ROOT_PASSWORD: yes
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
      # - my-db:/run/mysqld
      # - /var/run/mysqld/mysqld.sock:/tmp/mysql.sock

# Names our volume
volumes:
  my-db:
